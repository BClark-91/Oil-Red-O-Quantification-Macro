// RaspberryPicker-40x----------
// Macro for quantifying the area of Oil Red O staining in differentiated 3T3-L1 cells observed at 40x
// Run on a machine with at least the following specifications:
// System Specifications - OS: Windows 7 [64-bit]; RAM: 8 GB; Processor: 3.2 GHz
// Program Specifications - ImageJ 1.48v; Maximum memory: 7000 MB; Parallel threads: 4; Java: Java 1.8.0_112 [64-bit]
// Capable of processing at least 15 images per run (Completes within 6 to 7 min)
// Generates output images and Excel sheets containing data for “ORO Area” and “Total Cell Area”
// B. Clark 8/August/2017

input = getDirectory("Choose a Directory ");
output = input + "Macro Ouput/";
File.makeDirectory(output);

list = getFileList(input);
for (q = 0; q < list.length; q++) {
     showProgress(q+1, list.length);
     filename = input + list[q];
     if (endsWith(filename,".JPG")) {
          open(list[q]);
          run("Duplicate...", "title=[XXX]");
          selectWindow("XXX");
          rename(list[q]+"-1");

run("Threshold Colour");
// Threshold Colour v1.16------
// Autogenerated macro, single images only!
// G. Landini 8/May/2015.
//
min=newArray(3);
max=newArray(3);
filter=newArray(3);
a=getTitle();
run("RGBtoYUV ");
run("RGB Stack");
run("Convert Stack to Images");
selectWindow("Red");
rename("0");
selectWindow("Green");
rename("1");
selectWindow("Blue");
rename("2");
min[0]=0;
max[0]=255;
filter[0]="pass";
min[1]=0;
max[1]=255;
filter[1]="pass";
min[2]=0;
max[2]=175;
filter[2]="pass";
for (i=0;i<3;i++){
  selectWindow(""+i);
  setThreshold(min[i], max[i]);
  run("Convert to Mask");
  if (filter[i]=="stop")  run("Invert");
}
imageCalculator("AND create", "0","1");
imageCalculator("AND create", "Result of 0","2");
for (i=0;i<3;i++){
  selectWindow(""+i);
  close();
}
selectWindow("Result of 0");
close();
selectWindow("Result of Result of 0");
rename(a);
// Threshold Colour ------------
setBackgroundColor(0, 0, 0);
setForegroundColor(255, 255, 255);
setAutoThreshold("Default");
//run("Threshold...");
setThreshold(0, 0);
run("Convert to Mask");
selectWindow(list[q]);
run("Duplicate...", "title=[XXX]");
rename(list[q]+"-2");
selectWindow(list[q]+"-1");
rename("OverlayImage");
selectWindow(list[q]+"-2");
run("Add Image...", "image=[OverlayImage] x=0 y=0 opacity=100 zero");
run("Flatten");
run("Duplicate...", "title=[XXX]");
selectWindow("XXX");
FilenameLengthMinusExt = indexOf(list[q], ".JPG");
FilenameMinusExt = substring(list[q],0, FilenameLengthMinusExt);
rename(FilenameMinusExt+"-OROColour.JPG");
NewFolder = output + FilenameMinusExt+"/";
File.makeDirectory(NewFolder);
selectWindow(list[q]+"-1");
saveAs("tiff", NewFolder+"3-"+FilenameMinusExt+"-NonOROWhite.tif");
close();
selectWindow(list[q]);
run("Duplicate...", "title=[YYY]");
selectWindow("YYY");
rename(FilenameMinusExt+".tif");
saveAs("tiff", NewFolder+"1-"+FilenameMinusExt+".tif");
close();
selectWindow(list[q]+"-2");
close();
selectWindow("OverlayImage");
rename(FilenameMinusExt+"-ORORed.JPG");
run("Set Measurements...", "area area_fraction limit display redirect=None decimal=3");
run("Measure");
selectWindow(FilenameMinusExt+"-ORORed.JPG");
setForegroundColor(255,0,0);
run("Create Selection");

QuerySelection = selectionType();
if(QuerySelection != -1) {
     run("RGB Color");
     run("Fill", "slice");
     run("Select None");
}

if(QuerySelection == -1) {
     run("RGB Color");
}

run("Duplicate...", "title=[XXX]");
rename(FilenameMinusExt+"-ORORedWhite.JPG");
selectWindow(FilenameMinusExt+"-ORORed.JPG");
saveAs("tiff", NewFolder+"7-"+FilenameMinusExt+"-ORORed.tif");
close();





selectWindow(list[q]);
run("Duplicate...", "title=[XXX]");
rename(list[q]+"-1");
setBackgroundColor(0, 0, 0);
selectWindow(list[q]+"-1");
run("Threshold Colour");
// Threshold Colour v1.16------
// Autogenerated macro, single images only!
// G. Landini 8/May/2015.
//
min=newArray(3);
max=newArray(3);
filter=newArray(3);
a=getTitle();
run("RGBtoYUV ");
run("RGB Stack");
run("Convert Stack to Images");
selectWindow("Red");
rename("0");
selectWindow("Green");
rename("1");
selectWindow("Blue");
rename("2");
min[0]=0;
max[0]=255;
filter[0]="pass";
min[1]=0;
max[1]=255;
filter[1]="pass";
min[2]=0;
max[2]=175;
filter[2]="pass";
for (i=0;i<3;i++){
  selectWindow(""+i);
  setThreshold(min[i], max[i]);
  run("Convert to Mask");
  if (filter[i]=="stop")  run("Invert");
}
imageCalculator("AND create", "0","1");
imageCalculator("AND create", "Result of 0","2");
for (i=0;i<3;i++){
  selectWindow(""+i);
  close();
}
selectWindow("Result of 0");
close();
selectWindow("Result of Result of 0");
rename(a);
// Threshold Colour ------------
setBackgroundColor(0, 0, 0);
selectWindow(list[q]);
run("Duplicate...", "title=[XXX]");
rename(list[q]+"-2");
selectWindow(list[q]+"-1");
rename("OverlayImage");
selectWindow(list[q]+"-2");
run("Add Image...", "image=[OverlayImage] x=0 y=0 opacity=100 zero");
run("Flatten");
run("Duplicate...", "title=[XXX]");
setForegroundColor(255, 255, 255);
run("Duplicate...", "title=[YYY]");
selectWindow("XXX");
run("Duplicate...", "title=[ZZZ]");
selectWindow("XXX");
saveAs("tiff", NewFolder+"4-"+FilenameMinusExt+"-OROWhite.tif");
close();
selectWindow("ZZZ");
rename(FilenameMinusExt+"-OROWhite.JPG");
run("Select None");
selectWindow(list[q]+"-1");
close();
selectWindow("OverlayImage");
close();
selectWindow(list[q]+"-2");
close();
selectWindow("YYY");
run("Duplicate...", "title=[XXX]");





selectWindow("YYY");
run("Threshold Colour");
// Threshold Colour v1.16------
// Autogenerated macro, single images only!
// G. Landini 8/May/2015.
//
min=newArray(3);
max=newArray(3);
filter=newArray(3);
a=getTitle();
run("RGBtoYUV ");
run("RGB Stack");
run("Convert Stack to Images");
selectWindow("Red");
rename("0");
selectWindow("Green");
rename("1");
selectWindow("Blue");
rename("2");
min[0]=0;
max[0]=255;
filter[0]="pass";
min[1]=129;
max[1]=255;
filter[1]="pass";
min[2]=0;
max[2]=255;
filter[2]="pass";
for (i=0;i<3;i++){
  selectWindow(""+i);
  setThreshold(min[i], max[i]);
  run("Convert to Mask");
  if (filter[i]=="stop")  run("Invert");
}
imageCalculator("AND create", "0","1");
imageCalculator("AND create", "Result of 0","2");
for (i=0;i<3;i++){
  selectWindow(""+i);
  close();
}
selectWindow("Result of 0");
close();
selectWindow("Result of Result of 0");
run("Invert");
rename(a);
// Threshold Colour ------------
selectWindow("YYY");
setBackgroundColor(0, 0, 0);
setForegroundColor(255, 255, 255);
selectWindow("XXX");
run("Select None");
run("Duplicate...", "title=[ZZZ]");
run("Add Image...", "image=[YYY] x=0 y=0 opacity=100 zero");
run("Flatten");
rename("WWW");
selectWindow("ZZZ");
close();
selectWindow("XXX");
close();
selectWindow("YYY");
close();
selectWindow("WWW");
run("Duplicate...", "title=[XXX]");





selectWindow("XXX");
run("Threshold Colour");
// Threshold Colour v1.16------
// Autogenerated macro, single images only!
// G. Landini 8/May/2015.
//
min=newArray(3);
max=newArray(3);
filter=newArray(3);
a=getTitle();
run("RGBtoYUV ");
run("RGB Stack");
run("Convert Stack to Images");
selectWindow("Red");
rename("0");
selectWindow("Green");
rename("1");
selectWindow("Blue");
rename("2");
min[0]=0;
max[0]=255;
filter[0]="pass";
min[1]=0;
max[1]=255;
filter[1]="pass";
min[2]=168;
max[2]=255;
filter[2]="pass";
for (i=0;i<3;i++){
  selectWindow(""+i);
  setThreshold(min[i], max[i]);
  run("Convert to Mask");
  if (filter[i]=="stop")  run("Invert");
}
imageCalculator("AND create", "0","1");
imageCalculator("AND create", "Result of 0","2");
for (i=0;i<3;i++){
  selectWindow(""+i);
  close();
}
selectWindow("Result of 0");
close();
selectWindow("Result of Result of 0");
run("Invert");
rename(a);
// Threshold Colour ------------
selectWindow("XXX");
setBackgroundColor(0, 0, 0);
setForegroundColor(255, 255, 255);
selectWindow("WWW");
run("Select None");
run("Duplicate...", "title=[YYY]");
run("Add Image...", "image=[XXX] x=0 y=0 opacity=100 zero");
run("Flatten");
rename("ZZZ");
selectWindow("YYY");
close();
selectWindow("XXX");
close();
selectWindow("WWW");
close();
selectWindow("ZZZ");
run("Duplicate...", "title=[XXX]");





selectWindow("XXX");
run("Threshold Colour");
// Threshold Colour v1.16------
// Autogenerated macro, single images only!
// G. Landini 8/May/2015.
//
min=newArray(3);
max=newArray(3);
filter=newArray(3);
a=getTitle();
run("HSB Stack");
run("Convert Stack to Images");
selectWindow("Hue");
rename("0");
selectWindow("Saturation");
rename("1");
selectWindow("Brightness");
rename("2");
min[0]=0;
max[0]=255;
filter[0]="pass";
min[1]=0;
max[1]=255;
filter[1]="pass";
min[2]=0;
max[2]=140;
filter[2]="pass";
for (i=0;i<3;i++){
  selectWindow(""+i);
  setThreshold(min[i], max[i]);
  run("Convert to Mask");
  if (filter[i]=="stop")  run("Invert");
}
imageCalculator("AND create", "0","1");
imageCalculator("AND create", "Result of 0","2");
for (i=0;i<3;i++){
  selectWindow(""+i);
  close();
}
selectWindow("Result of 0");
close();
selectWindow("Result of Result of 0");
run("Invert");
rename(a);
// Threshold Colour ------------
selectWindow("XXX");
setBackgroundColor(0, 0, 0);
setForegroundColor(255, 255, 255);
selectWindow("ZZZ");
run("Select None");
run("Duplicate...", "title=[YYY]");
run("Add Image...", "image=[XXX] x=0 y=0 opacity=100 zero");
run("Flatten");
rename("WWW");
selectWindow("YYY");
close();
selectWindow("XXX");
close();
selectWindow("ZZZ");
close();
selectWindow("WWW");
run("Duplicate...", "title=[XXX]");





selectWindow("XXX");
run("Threshold Colour");
// Threshold Colour v1.16------
// Autogenerated macro, single images only!
// G. Landini 8/May/2015.
//
min=newArray(3);
max=newArray(3);
filter=newArray(3);
a=getTitle();
run("RGBtoYUV ");
run("RGB Stack");
run("Convert Stack to Images");
selectWindow("Red");
rename("0");
selectWindow("Green");
rename("1");
selectWindow("Blue");
rename("2");
min[0]=0;
max[0]=255;
filter[0]="pass";
min[1]=0;
max[1]=255;
filter[1]="pass";
min[2]=160;
max[2]=255;
filter[2]="pass";
for (i=0;i<3;i++){
  selectWindow(""+i);
  setThreshold(min[i], max[i]);
  run("Convert to Mask");
  if (filter[i]=="stop")  run("Invert");
}
imageCalculator("AND create", "0","1");
imageCalculator("AND create", "Result of 0","2");
for (i=0;i<3;i++){
  selectWindow(""+i);
  close();
}
selectWindow("Result of 0");
close();
selectWindow("Result of Result of 0");
run("Invert");
rename(a);
// Threshold Colour ------------
selectWindow("XXX");
setBackgroundColor(0, 0, 0);
setForegroundColor(255, 255, 255);
selectWindow("WWW");
run("Select None");
run("Duplicate...", "title=[YYY]");
run("Add Image...", "image=[XXX] x=0 y=0 opacity=100 zero");
run("Flatten");
rename("ZZZ");
selectWindow("YYY");
close();
selectWindow("XXX");
close();
selectWindow("WWW");
close();
selectWindow("ZZZ");
run("Duplicate...", "title=[XXX]");





selectWindow("XXX");
run("Threshold Colour");
// Threshold Colour v1.16------
// Autogenerated macro, single images only!
// G. Landini 8/May/2015.
//
min=newArray(3);
max=newArray(3);
filter=newArray(3);
a=getTitle();
run("RGBtoYUV ");
run("RGB Stack");
run("Convert Stack to Images");
selectWindow("Red");
rename("0");
selectWindow("Green");
rename("1");
selectWindow("Blue");
rename("2");
min[0]=0;
max[0]=140;
filter[0]="pass";
min[1]=0;
max[1]=255;
filter[1]="pass";
min[2]=0;
max[2]=255;
filter[2]="pass";
for (i=0;i<3;i++){
  selectWindow(""+i);
  setThreshold(min[i], max[i]);
  run("Convert to Mask");
  if (filter[i]=="stop")  run("Invert");
}
imageCalculator("AND create", "0","1");
imageCalculator("AND create", "Result of 0","2");
for (i=0;i<3;i++){
  selectWindow(""+i);
  close();
}
selectWindow("Result of 0");
close();
selectWindow("Result of Result of 0");
run("Invert");
rename(a);
// Threshold Colour ------------
selectWindow("XXX");
setBackgroundColor(0, 0, 0);
setForegroundColor(255, 255, 255);
selectWindow("ZZZ");
run("Select None");
run("Duplicate...", "title=[YYY]");
run("Add Image...", "image=[XXX] x=0 y=0 opacity=100 zero");
run("Flatten");
rename("WWW");
selectWindow("YYY");
close();
selectWindow("XXX");
close();
selectWindow("ZZZ");
close();
selectWindow("WWW");
run("Duplicate...", "title=[XXX]");
rename(FilenameMinusExt+"-CellsBlack-NonCellsWhite.JPG");
selectWindow("WWW");
run("Duplicate...", "title=[YYY]");
rename(FilenameMinusExt+"-CellsWhite.JPG");
selectWindow("WWW");
saveAs("tiff", NewFolder+"5-"+FilenameMinusExt+"-CellsWhite.tif");
close();





selectWindow(FilenameMinusExt+"-CellsBlack-NonCellsWhite.JPG");
run("8-bit");
setAutoThreshold("Default");
//run("Threshold...");
setThreshold(255, 255);
setOption("BlackBackground", false);
run("Convert to Mask");
run("Set Measurements...", "area area_fraction limit display redirect=None decimal=3");
run("Measure");
selectWindow(FilenameMinusExt+"-CellsBlack-NonCellsWhite.JPG");
rename("XXX");
run("Duplicate...", "title=[YYY]");
selectWindow("XXX");
run("Duplicate...", "title=[ZZZ]");
rename(FilenameMinusExt+"-CellsBlack-NonCellsWhite.JPG");
selectWindow("XXX");
saveAs("tiff", NewFolder+"6-"+FilenameMinusExt+"-CellsBlack-NonCellsWhite.tif");
close();
selectWindow(list[q]);
run("Duplicate...", "title=[XXX]");
run("Add Image...", "image=[YYY] x=0 y=0 opacity=100 zero");
run("Flatten");
rename("ZZZ");
selectWindow("XXX");
close();
selectWindow("YYY");
close();
selectWindow("ZZZ");
run("Duplicate...", "title=[XXX]");
rename(FilenameMinusExt+"-NonCellsWhite.JPG");
selectWindow("ZZZ");
saveAs("tiff", NewFolder+"2-"+FilenameMinusExt+"-NonCellsWhite.tif");
close();





selectWindow(list[q]);
x =getWidth;
y =getHeight;

newImage("WhiteBlank", "8-bit white", x, y, 1);
setForegroundColor(255, 255, 255);





selectWindow(FilenameMinusExt+"-CellsBlack-NonCellsWhite.JPG");
run("Duplicate...", "title=[VVV]");
run("RGB Color");
selectWindow(FilenameMinusExt+"-ORORedWhite.JPG");
run("Duplicate...", "title=[XXX]");
run("8-bit");
setAutoThreshold("Default dark");
//run("Threshold...");
setThreshold(255, 255);
setOption("BlackBackground", false);
run("Convert to Mask");
run("Create Selection");
run("Make Inverse");

QuerySelection = selectionType();
if(QuerySelection != -1) {
     run("RGB Color");
     setForegroundColor(255, 0, 0);
     run("Fill", "slice");
}

if(QuerySelection == -1) {
     run("RGB Color");
}

selectWindow("VVV");
run("Add Image...", "image=[XXX] x=0 y=0 opacity=100 zero");
run("Flatten");
rename(FilenameMinusExt+"-ORORed-CellsBlack-NonCellsWhite.JPG");
run("Duplicate...", "title=[YYY]");
saveAs("tiff", NewFolder+"8-"+FilenameMinusExt+"-ORORed-CellsBlack-NonCellsWhite.tif");
close();
selectWindow("XXX");
close();
selectWindow("VVV");
close();





run("Images to Stack", "name=Stack title=[] use");
run("Make Substack...", "  slices=1,8,7,5,2,4");
selectWindow("Stack");
run("Make Substack...", "  slices=6,3,9");
selectWindow("Stack");
close();

selectWindow("Substack (1,8,7,5,2,4)");
setBackgroundColor(255, 255, 255);
setForegroundColor(0, 0, 0);
run("Make Montage...", "columns=2 rows=3 scale=1 first=1 last=6 increment=1 border=5 font=12 use");
saveAs("tiff", NewFolder+"12-"+FilenameMinusExt+"-MONTAGE-RealColour.tif");
close();
selectWindow("Substack (1,8,7,5,2,4)");
saveAs("tiff", NewFolder+"10-"+FilenameMinusExt+"-STACK-RealColour.tif");
close();

selectWindow("Substack (6,3,9)");
setBackgroundColor(255, 255, 255);
setForegroundColor(0, 0, 0);
run("Make Montage...", "columns=3 rows=1 scale=1 first=1 last=3 increment=1 border=10 font=12 use");
saveAs("tiff", NewFolder+"11-"+FilenameMinusExt+"-MONTAGE-BWR.tif");
close();
selectWindow("Substack (6,3,9)");
saveAs("tiff", NewFolder+"9-"+FilenameMinusExt+"-STACK-BWR.tif");
close();



// Close Threshold Colour Windows 1 to 7 and Exception Window
if (isOpen("Threshold Colour")) { 
     selectWindow("Threshold Colour");  
     run("Close");
} 

if (isOpen("Threshold Colour")) { 
     selectWindow("Threshold Colour");  
     run("Close");
}

if (isOpen("Threshold Colour")) { 
     selectWindow("Threshold Colour");  
     run("Close");
} 

if (isOpen("Threshold Colour")) { 
     selectWindow("Threshold Colour");  
     run("Close");
} 

if (isOpen("Threshold Colour")) { 
     selectWindow("Threshold Colour");  
     run("Close");
} 

if (isOpen("Threshold Colour")) { 
     selectWindow("Threshold Colour");  
     run("Close");
} 

if (isOpen("Threshold Colour")) { 
     selectWindow("Threshold Colour");  
     run("Close");
}

if (isOpen("Exception")) { 
     selectWindow("Exception");  
     run("Close");
}
//


     }
}





nR = nResults;
label1 = newArray(nR);
x1 = newArray(nR);
y1 = newArray(nR);
label2 = newArray(nR);
x2 = newArray(nR);
y2 = newArray(nR);

// Get ORO Only Data
for (t=0; t<nR;t+=2) {
	label1[t] = getResultLabel(t);
	x1[t] = getResult("Area", t);
	y1[t] = getResult("%Area", t);
}

saveAs("Results", output+"Unsorted Results.xls");

IJ.deleteRows(0, 0);

// Get Total Cell Data
for (t=0; t<nR;t+=2) {
	label2[t] = getResultLabel(t);
	x2[t] = getResult("Area", t);
	y2[t] = getResult("%Area", t);
}

// Rename Original Results Table
IJ.renameResults("Unsorted Results");

// Make New Results Table
for (t=0; t<nR;t++) {
	setResult("Image Filename (ORO)", t, label1[t]);
	setResult("ORO Area", t, x1[t]);
	setResult("ORO % Area", t, y1[t]);
	setResult("Image Filename (Total Cell)", t, label2[t]);
	setResult("Total Cell Area", t, x2[t]);
	setResult("Total Cell % Area", t, y2[t]);
}
updateResults();

if (isOpen("Unsorted Results")) {
    selectWindow("Unsorted Results"); 
    run("Close");
}

selectWindow("Results");

// Remove Zeroes From New Results Table
for (t=1; t<=nResults;t+=1) {
	IJ.deleteRows(t, t);
}

saveAs("Results", output+"Sorted Results - MAIN.xls");

if (isOpen("Results")) {
    selectWindow("Results"); 
    run("Close");
}





list = getList("window.titles");
     for (i=0; i<list.length; i++) {
          winame = list[i];
          if (winame!="Results") {
               selectWindow(winame);
               run("Close");
          }
     }





